#version: '3.8'
#
#services:
#  postgres:
#    image: postgres:13
#    container_name: postgres_container
#    environment:
#      POSTGRES_USER: user
#      POSTGRES_PASSWORD: password
#      POSTGRES_DB: iot_db
#    ports:
#      - "5432:5432"
#    volumes:
#      - postgres_data:/var/lib/postgresql/data
#    restart: always
#
#  redis:
#    image: redis:latest
#    container_name: redis_container
#    ports:
#      - "6379:6379"
#    volumes:
#      - redis_data:/data
#    restart: always
#
#  rabbitmq:
#    image: rabbitmq:management
#    container_name: rabbitmq_container
#    environment:
#      RABBITMQ_DEFAULT_USER: guest
#      RABBITMQ_DEFAULT_PASS: guest
#    ports:
#      - "5672:5672"  # פורט לתקשורת בין השירותים
#      - "15672:15672"  # ממשק ניהול של RabbitMQ
#    restart: always
#
#
#volumes:
#  postgres_data:
#  redis_data:


version: '3.8'

services:
  ingestion_db:
    image: postgres:13
    container_name: ingestion_db
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: iot_db
    ports:
      - "5432:5432"
    volumes:
      - ingestion_db_data:/var/lib/postgresql/data
    restart: always
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U user -d iot_db" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - shared_network

  ingestion_redis:
    image: redis:latest
    container_name: ingestion_redis
    ports:
      - "6379:6379"
    volumes:
      - ingestion_redis_data:/data
    restart: always
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - shared_network


  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq_container
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672"
      - "15672:15672"
    restart: always
    networks:
      - shared_network
    healthcheck:
      test: [ "CMD", "rabbitmqctl", "status" ]
      interval: 10s
      timeout: 5s
      retries: 5

  ingestion_service:
    build: .
    container_name: ingestion_service
    restart: always
    depends_on:
      rabbitmq:
        condition: service_healthy
      ingestion_db:
        condition: service_healthy
      ingestion_redis:
        condition: service_healthy
    environment:
      RUNNING_IN_DOCKER: True
      DATABASE_URL: postgresql://user:password@ingestion_db:5432/iot_db
      REDIS_URL: redis://ingestion_redis:6379/0
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672/
    ports:
      - "8000:8000"
    command: [ "uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000", "--reload" ]
    networks:
      - shared_network

volumes:
  ingestion_db_data:
  ingestion_redis_data:

networks:
  shared_network:
    external: true

